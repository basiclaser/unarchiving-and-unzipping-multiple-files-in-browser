[{"/Users/christophershelley/work/gdc-multi-file/src/index.js":"1","/Users/christophershelley/work/gdc-multi-file/src/App.js":"2","/Users/christophershelley/work/gdc-multi-file/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610466188000,"results":"4","hashOfConfig":"5"},{"size":2443,"mtime":1610466380011,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610466188001,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1qaprc1",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christophershelley/work/gdc-multi-file/src/index.js",[],["16","17"],"/Users/christophershelley/work/gdc-multi-file/src/App.js",["18","19","20","21","22"],"import React, { useEffect, useState } from \"react\";\nimport untar from \"js-untar\";\nconst pako = require(\"pako\");\n\n// fetch everything DONE\n// \"unarchive\" DONE\n// for each unarchived file, ungzip it DONE\n// for each ungzipped file, find the correct line of text, save to object with key=filename, value=value of matching\n\nexport default function App() {\n  const [a, b] = useState([]);\n  const [desiredGene, setDesiredGene] = useState(\"ENSG00000164114.17\");\n  const [results, setResults] = useState([]);\n\n  const unarchive = async function (stuff) {\n    // console.log(stuff);\n    let unzippedFiles = [];\n    await untar(stuff).progress(function (extractedFile) {\n      // console.log(extractedFile);\n      const newFileOutput = pako.ungzip(extractedFile.buffer, {\n        to: \"string\",\n      });\n      unzippedFiles.push({ [extractedFile.name]: newFileOutput });\n    });\n    return unzippedFiles;\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.gdc.cancer.gov/data?tarfile\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        ids: [\n          \"95e6e420-6b86-4034-aa6c-369c38c8840a\",\n          \"c8546523-a711-4b5f-97ff-7a3c6ca9413f\",\n          \"e62a1625-73f9-49e4-9922-d15a6e18ee72\",\n          \"72accbef-4357-45e3-9d31-5dd4eb8d3ded\",\n          \"2a88aff5-a29d-434a-9859-c60f47bcf75e\",\n          \"9cf14ffd-734b-4fd2-9420-b9bc9f0aab10\",\n          \"c8b151d7-1e83-42b2-bca0-153c0a81e0fa\",\n          \"cb3d8e55-0e4b-43a1-8b5f-f27e7f9f440a\",\n          \"ad431459-b16a-4ec0-add9-2b5f5999eb91\",\n          \"156eaaf6-96ce-44e9-9fa3-6f1db0399332\",\n        ],\n      }),\n    })\n      .then((r) => r.arrayBuffer())\n      .then((r) => unarchive(r, \"test-download.tar.gz\"))\n      .then((files) => {\n        console.log(files);\n        setResults(\n          files.map((file) => {\n            console.log(Object.keys(file)[0], Object.values(file)[0]);\n            var fileLines = Object.values(file)[0].split(\"\\n\");\n            for (var i = 0; i < fileLines.length; i++) {\n              var y = fileLines[i].split(\"\\t\");\n              if (y[0] === desiredGene) {\n                return { [Object.keys(file)[0]]: y[1] };\n              }\n            }\n          })\n        );\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      {desiredGene}\n      {results.map((r) => (\n        <li>\n          {Object.keys(r)[0]} {Object.values(r)[0]}\n        </li>\n      ))}\n    </div>\n  );\n}\n","/Users/christophershelley/work/gdc-multi-file/src/reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":11,"column":10,"nodeType":"29","messageId":"30","endLine":11,"endColumn":11},{"ruleId":"27","severity":1,"message":"31","line":11,"column":13,"nodeType":"29","messageId":"30","endLine":11,"endColumn":14},{"ruleId":"27","severity":1,"message":"32","line":12,"column":23,"nodeType":"29","messageId":"30","endLine":12,"endColumn":37},{"ruleId":"33","severity":1,"message":"34","line":54,"column":28,"nodeType":"35","messageId":"36","endLine":54,"endColumn":30},{"ruleId":"37","severity":1,"message":"38","line":66,"column":6,"nodeType":"39","endLine":66,"endColumn":8,"suggestions":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","'b' is assigned a value but never used.","'setDesiredGene' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'desiredGene'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setResults' needs the current value of 'desiredGene'.","ArrayExpression",["43"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [desiredGene]",{"range":"46","text":"47"},[2246,2248],"[desiredGene]"]